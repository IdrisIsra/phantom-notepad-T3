import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { trpc } from "../../utils/trpc";

const NotepadPage: NextPage = () => {
  const [message, setMessage] = useState("");
  const [messages, setMessages] = useState<string[]>([]);
  const hello = trpc.example.hello.useQuery();
  const addMessage = trpc.example.add.useMutation();
  // trpc.example.randomNumber.useSubscription(undefined, {
  //   onData(data) {
  //     setRandomNumber(data);
  //     console.log("data is ", data);
  //   },
  // });

  trpc.example.onAdd.useSubscription(undefined, {
    onData(newMessage) {
      console.log("messages is ", messages);
      setMessages((prevMessages) => [...prevMessages, newMessage]);
    },
    onError(err) {
      console.error("Subscription error:", err);
    },
  });

  async function handleInput(e: React.ChangeEvent<HTMLTextAreaElement>) {
    setMessage(e.target.value);
    console.log("Selection start: ", e.target.selectionStart);
    console.log("Derived data: ", e.target.value[e.target.selectionStart - 1]);
  }

  async function postMessage() {
    const input = {
      key: "welcome",
      text: message,
    };
    try {
      await addMessage.mutateAsync(input);
      setMessage("");
    } catch {}
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex min-h-screen flex-col items-center justify-start gap-10 p-4">
        <h1 className="text-4xl font-extrabold leading-normal text-neutral-100 md:text-[5rem]">
          Phantom <span className="text-rose-500">Notepad</span>
        </h1>
        <div className="flex w-full justify-center gap-2 lg:w-1/2">
          <textarea
            className="h-[550px] grow rounded p-5 "
            value={message}
            onChange={handleInput}
            maxLength={1500}
          />
        </div>
      </main>
    </>
  );
};

export default NotepadPage;
